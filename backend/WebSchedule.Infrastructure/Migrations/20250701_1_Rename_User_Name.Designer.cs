// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSchedule.Infrastructure;

#nullable disable

namespace WebSchedule.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701_1_Rename_User_Name")]
    partial class Rename_User_Name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("StartingYear")
                        .HasColumnType("int");

                    b.Property<int?>("StudyCourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudyLevel")
                        .HasColumnType("int");

                    b.Property<int>("StudyMode")
                        .HasColumnType("int");

                    b.Property<int>("Subgroup")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyCourseId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.StudyCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StudyCourses");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.UserInGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInGroups");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.Group", b =>
                {
                    b.HasOne("WebSchedule.Domain.Entities.Study.StudyCourse", "StudyCourse")
                        .WithMany()
                        .HasForeignKey("StudyCourseId");

                    b.Navigation("StudyCourse");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.UserInGroup", b =>
                {
                    b.HasOne("WebSchedule.Domain.Entities.Study.Group", "Group")
                        .WithMany("MembersInGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSchedule.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSchedule.Domain.Entities.Study.Group", b =>
                {
                    b.Navigation("MembersInGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
